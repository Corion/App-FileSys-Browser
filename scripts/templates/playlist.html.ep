<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<meta htmx.config.allowScriptTags="true">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link href="/bootstrap.5.3.3.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<title>HTMX playground</title>
<!-- <link rel="stylesheet" src="./boostrap.5.3.3.min.css" /> -->
<script src="/htmx.2.0.1.min.js"></script>
<script src="/ws.2.0.1.js"></script>
<script src="/debug.2.0.1.js"></script>
<script src="/loading-states.2.0.1.js"></script>
<script src="/idiomorph-ext.0.3.0.js"></script>

<script src="/video.8.17.2.min.js"></script>
<script src="/videojs-playlist.5.1.2.min.js"></script>
<link rel="stylesheet" href="/video-js.8.17.2.css" />

<link href="/mediaplayer.css" rel="stylesheet" crossorigin="anonymous">

<!-- how will we handle appending to the current playlist?! -->
<!-- tracklist: for album, songqueue: for playback -->

<script>
var playerSetup = false;
var playerPlaying = false;
var tracklist;
var songqueue;

function fetchTracklist() {
    const url = window.location.href + ".json";
    const req = new Request(url);
    window.fetch(req)
    .then( (res) => {
          res.json().then( (body) => {
            tracklist = body.slice(0);

            // If the player is idle, set it up with the new playlist
            console.log('Player is playing/at a track?!', playerPlaying);
            if( !playerPlaying ) {
                const player = videojs('my-player');
                console.log("Kicking of track?!");
                player.playlist( tracklist );
            };
          });
    });

}

function initPlayer() {
  const player = videojs('my-player');
  if(! playerSetup) {
      playerSetup = true;
      player.ready( () => {
        console.log("Connecting events");
            // Well, we don't want to necessarily change the playlist here!
            // player.playlist( tracklist );

            // Update our display
            player.on("playlistitem", (i) => {
              const track = player.playlist.currentIndex();

              // This is only for songs that are on the current page ...
              // Remove the "track-playing" class from all tracks
              const tracks = document.querySelectorAll(".track-playing");
              for (let elt of tracks) {
                  elt.classList.remove("track-playing");
              };

              const el = document.getElementById("track-"+track);
              if( el ) {
                el.classList.add("track-playing");
              };
            });

            // Our own implementation of autoadvance, since the one videojs has
            // in the playlist plugin does not seem to work?!
            player.on("ended", (e) => {
              playerPlaying = false;
              if( player.playlist.nextIndex() >= 1 ) {
                player.playlist.next();
              };
            });
            player.on(["playing",'play'], (e) => {
              playerPlaying = true;

              if ("mediaSession" in navigator) {
                let item = songqueue[  player.playlist.currentItem()];

                navigator.mediaSession.metadata = new MediaMetadata({
                  title: "Unforgettable",
                  artist: "Nat King Cole",
                  album: "The Ultimate Collection (Remastered)",
                  artwork: [
                    {
                      src: item.poster,
                      sizes: "400x400",
                      type: "image/jpeg",
                    },
                  ],
                });
              };

            });
      });
  };
}

function playTrack(track) {
  const player = videojs('my-player');
console.log("Playing track",track);
  // Replace the current playlist with the new album
  songqueue = tracklist.slice(0);
  player.playlist(songqueue);
  let item = songqueue[track];
  player.playlist.currentItem(track);
  player.ready( () => {
      player.play();
  });
}

function init() {
  console.log("Initializing");
    initPlayer();
    fetchTracklist();
};

/* This now gets called on _every_ page change ... */
htmx.onLoad( (elt) => {
  init();
});
</script>

</head>
<body
  hx-boost="true"
   hx-select="#container"
   hx-target="#container"
   hx-swap="outerHTML"
   onload="javascript:init()"
>
% my $art = $tracks->album_art;
  <div id="container" hx-history-elt>
    <nav><a href="/media">List</a></nav>
    <div class="grid-tracks">
        <img id="cover" src="/media/image/<%= Mojo::File->new( $art->name )->to_rel( $base ) %>" />
        <div id="tracklist">
        % my $i = 0;
        % for my $track ($tracks->music_files) {
              <div class="track-play" id="track-<%= 0+$i %>" hx-on:click="playTrack(<%= $i++ %>);">
                <div class="track-title">
                  <%= Mojo::File->new( $track->name )->basename %>
                </div>
              </div>
        % }
        </div>
    </div>
  </div>
  <div id="player" hx-preserve="true">
  <video
    hx-preserve="true"
    id="my-player"
    class="video-js"
    controls
    preload="auto"
    autoplay="true"
    type="audio/mpeg"
    % if( $art ) {
    data-setup='{"audioPosterMode":true, "poster":"/media/image/<%= Mojo::File->new( $art->name )->to_rel( $base ) %>"}'
    % }
    >
  <p class="vjs-no-js">
    To view this video please enable JavaScript
  </p>
  </video>
  </div>
  <div id="playqueue" hx-preserve="true">
  </div>
</body>
</html>
